permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:

# Spend CI time only on latest ref: https://github.com/jonhoo/rust-ci-conf/pull/5
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: Run tests
jobs:
  test-cockpit:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-20.04 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: >-
          sudo apt-get update &&
          sudo apt-get install -y 
          libgtk-3-dev 
          libwebkit2gtk-4.0-dev 
          libappindicator3-dev
          librsvg2-dev 
          patchelf
          libudev-dev

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.0.2

      - name: Install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test-parts:
    runs-on: ubuntu-latest
    name: Ubuntu / rust ${{ matrix.toolchain }}

    strategy:
      matrix:
        toolchain: [stable, beta]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dependencies
        run: >-
          sudo apt-get update &&
          sudo apt-get install -y
          libgtk-3-dev
          libayatana-appindicator3-dev
          libwebkit2gtk-4.0-dev
          libudev-dev

      - name: Create dist folder for Tauri
        run: mkdir -p ${{ github.workspace }}/cockpit/dist

      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile

      # https://twitter.com/jonhoo/status/1571290371124260865
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets

      # https://github.com/rust-lang/cargo/issues/6669
      - name: cargo test --doc
        run: cargo test --locked --all-features --doc

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  publish-cockpit:
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-20.04 ]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.0.2

      - name: Install frontend dependencies
        run: pnpm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false

  publish-parts:
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    strategy:
      matrix:
        include:
          - build: arm-v7
            os: ubuntu-latest
            rust: stable
            target: armv7-unknown-linux-gnueabihf
            linker: gcc-arm-linux-gnueabihf
            container: rust # Needed for the correct version of glibc
            cross: true
    steps:
      - name: Install sudo package
        run: apt update && apt install -y sudo

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.rustup
            target
          key: ${{ runner.os }}-${{ matrix.rust }}

      - name: Install Linker
        if: matrix.cross
        run: |
          sudo apt update
          sudo apt install -y ${{ matrix.linker }}

      - name: Install Rust
        run: |
          rustup install ${{ matrix.rust }}
          rustup target add ${{ matrix.target }}
          rustup show

      - name: Build Gauge
        run: cargo build -p gauge --release --target ${{ matrix.target }}

      - name: Build Carburetor
        run: cargo build -p carburetor --release --target ${{ matrix.target }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/gauge
            target/${{ matrix.target }}/release/carburetor

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}